name: build-push

on:
  push:
    branches:
      - "**"
    tags:
      - "v*.*.*"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-go@v2.1.3
        with:
          go-version: '^1.19.3'


      - name: get the version
        if: startsWith(github.ref, 'refs/tags/')
        id: get_tag
        shell: bash
        run: echo ::set-output name=GIT_TAG::${GITHUB_REF/refs\/tags\//}


      - name: setup env
        run: |
          echo "GOPATH=$(go env GOPATH)" >> $GITHUB_ENV
          echo "$(go env GOPATH)/bin" >> $GITHUB_PATH
        shell: bash

      - uses: actions/checkout@v2


      - run: make test build
        env:
          GIT_SHA: ${{ github.sha }}
          VERSION: ${{ steps.get_tag.outputs.GIT_TAG }}
      - uses: actions/upload-artifact@v2.2.3
        with:
          name: manager
          path: bin/manager


      - run: make kgrid-test kgrid
        env:
          GIT_SHA: ${{ github.sha }}
          VERSION: ${{ steps.get_tag.outputs.GIT_TAG }}
      - uses: actions/upload-artifact@v2.2.3
        with:
          name: kgrid
          path: bin/kgrid


      - name: login to DockerHub
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: build local manager image
        uses: docker/build-push-action@v2.5.0
        with:
          tags: replicated/kgrid-manager:${{ github.run_id }}
          context: .
          file: Dockerfile.manager
          push: false

      - name: scan manager for vulnerabilities
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: replicated/kgrid-manager:${{ github.run_id }}
          format: 'table'
          exit-code: '0'
          ignore-unfixed: true
          severity: 'CRITICAL,HIGH'

      - name: build and push manager image
        if: ${{ steps.get_tag.outputs.GIT_TAG != '' }}
        uses: docker/build-push-action@v2.5.0
        with:
          tags: replicated/kgrid-manager:${{ steps.get_tag.outputs.GIT_TAG }}
          context: .
          file: Dockerfile.manager
          push: true


      - name: build local kgrid image
        uses: docker/build-push-action@v2.5.0
        with:
          tags: replicated/kgrid:${{ github.run_id }}
          context: .
          file: Dockerfile.kgrid
          push: false

      - name: scan kgrid for vulnerabilities
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: replicated/kgrid:${{ github.run_id }}
          format: 'table'
          exit-code: '0'
          ignore-unfixed: true
          severity: 'CRITICAL,HIGH'

      - name: build and push kgrid image
        if: ${{ steps.get_tag.outputs.GIT_TAG != '' }}
        uses: docker/build-push-action@v2.5.0
        with:
          tags: replicated/kgrid:${{ steps.get_tag.outputs.GIT_TAG }}
          context: .
          file: Dockerfile.kgrid
          push: true


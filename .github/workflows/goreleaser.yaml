name: release
on:
  push:
    tags:
    - "v*.*.*"

jobs:
  goreleaser:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Unshallow
      run: git fetch --prune --unshallow

    - uses: actions/setup-go@v2.1.3
      with:
        go-version: '^1.19.3'

    - run: sudo apt-get update
    - run: sudo apt-get -qq -y install gnupg2 libdevmapper-dev libgpgme-dev libc6-dev-i386 btrfs-progs
    - name: set previous release tag for goreleaser
      shell: bash
      run: |
        export TAG=$(curl --silent "https://api.github.com/repos/replicatedhq/kgrid/releases/latest" | grep -Po '"tag_name": "\K.*?(?=")')
        echo "GORELEASER_PREVIOUS_TAG=${TAG}" >> $GITHUB_ENV

    - name: Run GoReleaser
      uses: goreleaser/goreleaser-action@v2.6.1
      with:
        version: "v0.166.1"
        args: release --rm-dist --config .goreleaser.yaml
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  assets:
    needs: goreleaser
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Unshallow
      run: git fetch --prune --unshallow

    - name: get the version
      if: startsWith(github.ref, 'refs/tags/')
      id: get_tag
      shell: bash
      run: echo ::set-output name=GIT_TAG::${GITHUB_REF/refs\/tags\//}

    - name: get release
      if: ${{ steps.get_tag.outputs.GIT_TAG != '' }}
      id: get_release
      uses: bruceadams/get-release@v1.2.2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: install operator-sdk
      run: |
        ARCH=$(case $(uname -m) in x86_64) echo -n amd64 ;; aarch64) echo -n arm64 ;; *) echo -n $(uname -m) ;; esac)
        OS=$(uname | awk '{print tolower($0)}')
        OPERATOR_SDK_DL_URL=https://github.com/operator-framework/operator-sdk/releases/download/v1.8.0
        curl -L ${OPERATOR_SDK_DL_URL}/operator-sdk_${OS}_${ARCH} -o operator-sdk
        chmod a+x ./operator-sdk
        sudo mv operator-sdk /usr/local/bin

    - name: make grid manifests
      run: |
        set -x
        export SEMVER=${GITHUB_REF:1}
        export IMG=replicated/kgrid-manager:${{ steps.get_tag.outputs.GIT_TAG }}
        make bundle-asset

    - name: upload manifest bundle
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: https://uploads.github.com/repos/replicatedhq/kgrid/releases/${{ steps.get_release.outputs.id }}/assets?name=kgrid-manifests.yaml
        asset_path: ./kgrid-manifests.yaml
        asset_name: kgrid-manifests.yaml
        asset_content_type: application/yaml
